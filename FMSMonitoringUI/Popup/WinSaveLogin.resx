<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>