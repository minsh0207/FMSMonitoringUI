<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADMAAAA4CAYAAABQZsDpAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAA99JREFUaEPtmk9ro0Achvd7hIQgSKk0kOJBGnZTcqggpLSsZQsD9hCaDZZQZAWD
        ZbFIMeRbvzumWq2Z6vgn2bTk8FzanzrPODPOvO23VquFr8JBZl85yOwrB5lCuhIGFzqMmQlr4cN/9uHZ
        c5iGDnXQg9BmXNMAzcp0+9BmLoLlCqtVDksXptZHh3WPGjQm01F02D6r4QF9M8Hmz0MWBgYi+35VaEZG
        JnDTb+PZhnEhQxTe13VEGSqZZ2pNqA0J1ZcRNcxfksY5xhBS0ZzoKtD/+ImQSyA3MI9qyogYW4mIS2RG
        zQe0exg/JkLurz67rgT1ZM6n8KPGrKwxRFZNHsIIZjzPlhbGmWFZlloyo9/xxHZBTtk1RYhXdnSPFaxL
        gVnDSw0ZBcZz1KsLHT1mDQfCGFYks5qN2DWcVJdp04kfNSK4H7JruOiDPEUyTwR9Zg0f1WVO6XIcybik
        zuTdB5ne7ReSaalvw2w11xi/52WIafydoiuiwKzho4aMBN2JGvEyxajqR08x4EWd4t8p7BpOasi00Ltx
        XmUo1qXIrMlHgPoQL+8eDIVVw08tmZZAh1o8RMKPXsk9lqjOk4+uU2N5j6gnQ+n9TN5OuGnUjtl1WcTv
        RrLhpEcCIrPrylBbJtyfqQ+pTWPRWaUtYUjs5I2sfNhX9fdlIQ3IUDKbxjWBC2tCcK1p0EKuCCaWkzm4
        UZGfJTanBTQjs6YD5Yb2eNEpM4aeecgPiXGf6jQoEyHI0AwLTuqMkybwbEyulOIzTwWal0kjiJCOpQhx
        a0FGzHZldkwjMsKRtHHe56UjVr82SyWZjjTA9cSGl50XywCOZUA/3wwzYoQjGUO6spm2txFJBX9tmESF
        XFGunEwYRDx67xqQyzpmeg0BP4ybWCzpkk04gpEM/DIyIxd78WA/mDBnIXQF88s0mIourOhaysY3iLIg
        ULqMtnwAn4x8Cyf9oCe6bZE/OK/TFUw+vwaZmJjToZS8GZ8OQdro3Ii2g/6F8b7TSsRQxTLpBIXi3g3K
        pzBlocOZLJJn+g8q1zMLZYb3yTaF96aN0JZB3FgowFwtTm7yZU50OJFIeKRtInUsRfj8eHh7BhRWTYpc
        mT5x33pmOmLXbBvlLl49fRhn7JqYHJn3x+Ihs2YHnBlvx4Wi4CRHprmgoR6p4ITOWXbNKzky/DfZLqko
        qiAF+lwyBbnaQWa3fCmZ1F8bChaiHJlUjyw9mDdRMLFj9FmySy9KPHNkMiHd/2bpQD9htzMmVyakdzmH
        x5u4bItnG7rSYbYvTaHMmrYA8S2Y2DUi9z8/8Ml8Eg4y+8pBZl85yOwnLfwDOJCeC8InwDYAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>